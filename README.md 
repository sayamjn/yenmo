Loan Eligibility Checker App

A web application that allows users to check their loan eligibility based on mutual fund holdings.

🚀 Features

User Authentication: Register and log in with secure JWT-based authentication.

Mutual Fund Holdings: Fetch mutual fund data using PAN number.

Loan Eligibility Calculation: Compute loan eligibility based on mutual fund value.

Eligibility History: View and track the history of previous eligibility checks.

🛠 Tech Stack

Frontend

React.js (with Vite)

React Router (for navigation)

Context API (for state management)

Tailwind CSS (for styling)

Axios (for API requests)

React Toastify (for notifications)

Backend

Node.js with Express.js

MongoDB with Mongoose

JWT (for authentication)

bcrypt (for password hashing)


📁 Project Structure
csharp
Copy
Edit
loan-eligibility-checker/
├── client/             # React frontend
│   ├── public/         # Static assets
│   └── src/            
│       ├── components/ # Reusable UI components
│       ├── context/    # Global state providers
│       ├── pages/      # Page components
│       └── services/   # API interaction logic
├── server/             # Express backend
│   ├── controllers/    # Request handlers
│   ├── middleware/     # Custom middleware
│   ├── models/         # Mongoose models
│   ├── routes/         # API route definitions
└── README.md           # Project documentation


⚙️ Setup Instructions

Prerequisites

Node.js (v14 or higher)

MongoDB

Installation

Clone the repository

git clone https://github.com/sayamjn/yenmo.git

cd yenmo

Install server dependencies

cd server

npm install

Install client dependencies

cd ../client

npm install

Configure environment variables

Create a .env file inside the server directory with the following:

env

PORT=5000
MONGO_URI=mongodb://localhost:27017/loan-eligibility-app
JWT_SECRET=your_jwt_secret_key_here
JWT_EXPIRE=30d

Running the Application

Start the backend server


cd server
npm run dev

Start the frontend client

cd ../client
npm run dev

Visit the app Open your browser and go to:

http://localhost:5173


📡 API Endpoints

🔐 Authentication

POST /api/auth/register — Register a new user

POST /api/auth/login — Log in

GET /api/auth/me — Get logged-in user's profile

📊 Mutual Funds

GET /api/mf/holdings?pan=ABCDE1234F — Get mutual fund holdings by PAN

💰 Loan Eligibility

POST /api/eligibility/calculate — Calculate loan eligibility

GET /api/eligibility/history — Retrieve past eligibility checks

🔒 Security Features

Password hashing using bcrypt

Protected routes using JWT

Input validation for PAN and other sensitive fields

Authorization middleware for securing APIs